import{o as a,c as t,a2 as e}from"./index-c264c4e8.js";const n={class:"markdown-body"},l=e(`<h1>Switch</h1><p><img src="https://img.shields.io/badge/coverage-100%25-green" alt=""></p><hr><h4>1、基础用法</h4><p>通过<code>v-model</code>绑定开关的选中状态，<code>true</code>表示开，<code>false</code>表示关</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>
</code></pre></div><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> defineComponent({
  setup() {
    <span class="hljs-keyword">return</span> {
      <span class="hljs-attr">value</span>: ref(<span class="hljs-literal">true</span>)
    }
  }
})
<span class="hljs-comment">// or</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  data() {
    <span class="hljs-keyword">return</span> {
      <span class="hljs-attr">value</span>: <span class="hljs-literal">true</span>
    };
  }
};
</code></pre></div><h4>2、禁用状态</h4><p>通过<code>disabled</code>属性来禁用开关，禁用状态下开关不可以点击操作</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>
</code></pre></div><h4>3、自定义大小</h4><p>通过<code>size</code>属性自定义开关的大小，单位是 px</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-switch</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;36px&quot;</span> /&gt;</span>
</code></pre></div><h4>4、自定义背景色</h4><p><code>active-color</code>属性表示打开时的背景色，<code>inactive-color</code>表示关闭时的背景色</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#67C23A&quot;</span> <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#FF596A&quot;</span> /&gt;</span>
</code></pre></div><h4>5、native 样式</h4><p>通过设置<code>shap=&quot;native&quot;</code>来呈现类似 ios 原生开关的样式效果（即原来旧版的样式风格）</p><p><strong><code>Tips:</code></strong> 手 Q 在 8.8.17 版本调整了 switch 的视觉规范。这里为了考虑兼容性和通用性，将旧的样式降级到通过新增的 shap 属性来设置</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">shap</span>=<span class="hljs-string">&quot;native&quot;</span> /&gt;</span>
</code></pre></div><h2>Props</h2><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>v-model/checked</td><td>开关选中状态</td><td><em>boolean</em></td><td><code>false</code></td><td></td></tr><tr><td>disabled</td><td>是否为禁用状态</td><td><em>boolean</em></td><td><code>false</code></td><td></td></tr><tr><td>size</td><td>开关大小，默认单位为 px</td><td><em>string</em></td><td><code>26px</code></td><td></td></tr><tr><td>active-color</td><td>打开时的背景色</td><td><em>string</em></td><td><code>#01CAFC</code></td><td></td></tr><tr><td>inactive-color</td><td>关闭时的背景色</td><td><em>string</em></td><td><code>#EBEDF5</code></td><td></td></tr><tr><td>shap</td><td>开关样式（2.0.0-beta20 新增）</td><td><em>string</em></td><td><code>normal</code></td><td><code>normal</code>|<code>native</code></td></tr></tbody></table><h2>Event</h2><table><thead><tr><th>事件</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>change</td><td>开关切换时触发</td><td><code>(checked: Boolean)</code></td></tr><tr><td>click</td><td>点击开关时触发</td><td><code>(event: Event)</code></td></tr></tbody></table>`,24),d=[l],i={__name:"README",setup(p,{expose:s}){return s({frontmatter:{}}),(r,o)=>(a(),t("div",n,d))}};export{i as default};
