import{o as a,c as n,a2 as t}from"./index-2a7e0456.js";const e={class:"markdown-body"},l=t(`<h1>Swiper</h1><hr><p><code>Swiper</code> 组件必须结合<code>SwiperItem</code>组件一起使用</p><h4>1、基础用法</h4><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-swiper</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">v-swiper-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;n in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span>{{ n }}<span class="hljs-tag">&lt;/<span class="hljs-name">v-swiper-item</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">v-swiper</span>&gt;</span>
</code></pre></div><h4>2、自动轮播</h4><p>通过<code>auto-play</code>属性设置自动轮播，默认轮播间隔为 3000ms，可以通过<code>interval</code>自定义轮播间隔</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-swiper</span> <span class="hljs-attr">auto-play</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">v-swiper-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;n in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span>{{ n }}<span class="hljs-tag">&lt;/<span class="hljs-name">v-swiper-item</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">v-swiper</span>&gt;</span>
</code></pre></div><h4>3、自定义指示器</h4><p>通过<code>v-slot:indicator</code>指令自定义轮播指示器</p><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">v-swiper</span> <span class="hljs-attr">auto-play</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;change&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">v-swiper-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;n in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span>{{ n }}<span class="hljs-tag">&lt;/<span class="hljs-name">v-swiper-item</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:indicator</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-indicator&quot;</span>&gt;</span>{{ current }} / 4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">v-swiper</span>&gt;</span>
</code></pre></div><div class="code-wrapper"><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  data() {
    <span class="hljs-keyword">return</span> {
      <span class="hljs-attr">current</span>: <span class="hljs-number">0</span>
    };
  },
  <span class="hljs-attr">methods</span>: {
    change(index) {
      <span class="hljs-keyword">this</span>.current = index;
    }
  }
};
</code></pre></div><h2>Props</h2><h4>Swiper</h4><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>auto-play</td><td>是否自动轮播</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>interval</td><td>自动轮播的时间间隔（单位: ms）</td><td><em>number</em></td><td><code>3000</code></td></tr><tr><td>duration</td><td>动画时长 （单位: ms）</td><td><em>number</em> | <em>string</em></td><td><code>500</code></td></tr><tr><td>show-indicators</td><td>是否显示指示器</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>indicator-color</td><td>指示器的颜色</td><td><em>string</em></td><td>-</td></tr><tr><td>loop</td><td>是否开启无限循环</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table><h4>SwiperItem</h4><p>无</p><h2>Event</h2><h4>Swiper</h4><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数类型</th></tr></thead><tbody><tr><td>change</td><td>轮播切换时触发</td><td><code>(index: Number)</code></td></tr></tbody></table><h4>SwiperItem</h4><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数类型</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><code>(event: Event)</code></td></tr></tbody></table>`,22),p=[l],i={__name:"README",setup(r,{expose:s}){return s({frontmatter:{}}),(d,h)=>(a(),n("div",e,p))}};export{i as default};
